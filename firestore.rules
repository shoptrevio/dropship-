
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Grant access based on user roles and collection specifics
    match /products/{productId} {
      allow read: if true; // Products are public
      allow write: if request.auth.uid != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff']);
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if request.auth.uid == userId; // Users can update their own data (preferences, etc.)
    }
    
    match /suppliers/{supplierId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /orders/{orderId} {
      allow read, write: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
    }

    // --- UX & AI Specific Rules ---

    // UI settings should be readable by all, but only writable by admins.
    match /ui_settings/{setting} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only write to their own UX metrics documents. Admins/staff can read them.
    match /ux_metrics/{metricId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
      allow create: if request.auth.uid != null; // Any authenticated user can create a metrics doc
    }

    // Admin controls are highly restricted.
    match /admin_ux_controls/{control} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Feedback can be written by any authenticated user, but only read by admin/staff.
    match /ai_training_feedback/{feedbackId} {
        allow create: if request.auth.uid != null;
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
    }
    
    // AI models can only be managed by admins.
    match /ai_models/{modelId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Decision logs are write-only for the backend, readable by admin.
    match /ai_decision_logs/{logId} {
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        // Writes should be handled by a trusted backend service/function.
        allow write: if false; 
    }

    // Geo-targeted UX settings are admin-only.
    match /geo_targeted_ux/{geoId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Special access for UX testers
    // This allows read access to certain collections for a 'ux-tester' role
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ux-tester';
    }
     match /ui_settings/{setting} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ux-tester';
    }

  }
}
