rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only update their own profile.
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // Prevent users from deleting their own accounts
    }
    
    // Customers can only review products they have purchased.
    // The review must include a rating between 1 and 5.
    match /product_reviews/{reviewId} {
      allow read;
      allow create: if request.auth != null
                    && request.resource.data.rating is int
                    && request.resource.data.rating >= 1
                    && request.resource.data.rating <= 5
                    && exists(/databases/$(database)/documents/orders/$(request.resource.data.orderId))
                    && get(/databases/$(database)/documents/orders/$(request.resource.data.orderId)).data.userId == request.auth.uid
                    && request.resource.data.productId in get(/databases/$(database)/documents/orders/$(request.resource.data.orderId)).data.items.map(item => item.productId);
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Products are publicly readable only if their status is 'active'.
    // Writes are restricted to admins (not yet implemented).
    match /products/{productId} {
      allow read: if resource.data.status == 'active';
      allow write: if false; // Lock down writes for now
    }

    // A list of high-risk countries for fraud prevention.
    function isHighRiskCountry() {
      // In a real application, this list would be more extensive.
      return request.resource.data.shippingAddress.country in ['NG', 'VN', 'ID'];
    }

    // Orders can only be created by authenticated users for themselves.
    // They can only read their own orders.
    match /orders/{orderId} {
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid && !isHighRiskCountry();
      allow delete: if false; // Do not allow orders to be deleted
    }
  }
}
