rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow a user to get their own document. Admins can get any.
      // Disallow listing all users for non-admins.
      allow get: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      
      // Allow a user to create their own profile.
      allow create: if isOwner(userId);
      
      // Allow a user to update their own profile. Admins can update any.
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete user profiles.
      allow delete: if isAdmin();
    }

    match /products/{productId} {
      // Allow anyone to read a product, but only if it's 'active'.
      allow read: if resource.data.status == 'active';
      // Allow admins to write (create, update, delete) products.
      allow write: if isAdmin();
    }
    
    match /orders/{orderId} {
      // A user can create an order if they are the owner.
      allow create: if isOwner(resource.data.userId);

      // A user can read/update an order if they are the owner or an admin.
      // Admins can delete orders.
      allow read, update: if isOwner(resource.data.userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /product_reviews/{reviewId} {
        // A user can create a review if they have purchased the product.
        allow create: if exists(/databases/$(database)/documents/orders/$(request.resource.data.orderId)) &&
                         get(/databases/$(database)/documents/orders/$(request.resource.data.orderId)).data.userId == request.auth.uid;
        // Allow anyone to read reviews.
        allow read: if true;
    }

    match /admin_users/{email} {
      // Only allow backend functions to write to this collection.
      allow read, write: if false;
    }

    match /carts/{cartId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }

    match /transactions/{transactionId} {
      // Deny all client-side access to raw transaction data.
      // Access should be through a secure callable function.
      allow read, write: if false;
    }
  }
}
